<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">
<!-- Autowiring is about inteliigently guessing the refernce without actually providing it. -->
<!-- Below is the example of byName is which name of the bean has to be same as name of the member variable
Line class must contain a variable with the name line -->
	<bean id="line" class="com.nice.installer.nim.validator.Line" autowire="byName">
	<lookup-method name="createPrototype" bean="pointA" />
	</bean>
	
	<!--2. Autowiring byType : This works when we have only one bean of each type, it looks for complete package
	name as type -->
	
	<!-- 3. Autowiring by constructor : work as AutowiringByType only but instead of using setter it uses 
	constructor -->
	
	<bean id="pointA" class="com.nice.installer.nim.validator.Point" scope="prototype">
	<property name="x" value="0" />
	<property name="y" value="0"></property>
	</bean>
	
	<bean id="pointB" class="com.nice.installer.nim.validator.Point" init-method="initializing" destroy-method="destroyed">
	<property name="x" value="10" />
	<property name="y" value="20"></property>
	</bean>

<!-- Bean id is not required for bean post processor -->
	<bean class="com.nice.installer.nim.validator.DisplayNameBeanPostProcessor"/>
	
	
</beans>

	
<!-- Changes for spring-hibernate integration -->
<!-- contains details related to datasource i.e. database -->
<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"	destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost:3306/TestDB" />
		<property name="username" value="pankaj" />
		<property name="password" value="pankaj123" />
	</bean>

<bean id="personDAO" class="com.journaldev.dao.PersonDAOImpl">
		<property name="sessionFactory" ref="sessionFactoryBean" />
	</bean>


 <bean id="sessionFactoryBean"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="annotatedClasses">
			<list>
				<value>com.journaldev.model.Person</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.current_session_context_class">thread</prop>
				<prop key="hibernate.show_sql">false</prop>
			</props>
		</property>
	</bean>
  
  
  
</beans>